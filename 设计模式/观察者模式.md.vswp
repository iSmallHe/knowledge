vnote_backup_file_826537664 D:/toolinstall/vnote/data/设计模式/观察者模式.md
# 观察者模式
<font color="#FFA500">**观察者模式定义**</font>：指多个对象存在一对多的依赖关系，当一个对象的状态发生改变时，所有的依赖它的对象都会得到通知。这种模式也被称为“发布-订阅模式”

## 观察者模式实现
```java
public class Client {

    public static void main(String[] args){
        Subject subject = new Subject();
        Observer a = new AgeObserver();
        Observer b = new MarriageObserver();
        subject.add(a);
        subject.add(b);
        subject.notifyAllObserver();
    }
}

class Subject{

    private List<Observer> observerList = new ArrayList();

    public void add(Observer observer){
        observerList.add(observer);
    }

    public void delete(Observer observer){
        observerList.remove(observer);
    }

    public void notifyAllObserver(){
        ListIterator<Observer> observerListIterator = observerList.listIterator();
        while(observerListIterator.hasNext()){
            observerListIterator.next().refresh();
        }
    }
}

interface Observer{

    public void refresh();

}

class AgeObserver implements Observer{

    @Override
    public void refresh() {
        System.out.println("refresh age");
    }
}

class MarriageObserver implements Observer{

    @Override
    public void refresh() {
        System.out.println("refresh marriage");
    }
}

```